name: Create Release
on:
  push:
    branches:
      - canary
      - master
    paths:
      - 'lerna.json'

permissions:
  repository-projects: write
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            const lernaVersion = require('./lerna.json').version;

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${lernaVersion}`,
              sha: context.sha,
            });

            const changes = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.before,
              head: context.sha,
            });

            const changesList = changes.data.commits.map(commit => `- ${commit.commit.message}`).join('\n');
            const contributors = changes.data.commits.map(commit => commit.author.login).filter((login, index, logins) => logins.indexOf(login) === index);
            const contributorsList = contributors.map(contributor => `- @${contributor}`).join('\n');
            const body = `## Core Changes\n${changesList}\n\n## Contributors\n${contributorsList}`;

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${lernaVersion}`,
              name: `v${lernaVersion}`,
              body,
              target_commitish: context.sha,
              prerelease: lernaVersion.includes('canary'),
            });

            core.setOutput('tag', `v${lernaVersion}`);
            core.setOutput('release', `v${lernaVersion}`);
